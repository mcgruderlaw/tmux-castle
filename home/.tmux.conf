##############################
#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  < 
#  \__|_| |_| |_|\__,_/_/\_\
#
#############################
#
# COPY AND PASTE
# http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
#
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#
############################################################################
############################################################################
# Reset Prefix
############################################################################
set -g prefix C-a
bind-key a send-prefix # for nested tmux sessions

############################################################################
# Global options
############################################################################
# large history
set-option -g history-limit 10000

#set-option -g base-index 1
#set-option -g pane-base-index 1

# colors
#setw -g mode-bg #fdf6e3 #brightblue # black
set-option -g default-terminal "xterm-256color"

# utf8 support
#set-window-option -g utf8 on


# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-attr reverse

# Automatically set window title
set-window-option -g automatic-rename on
set-window-option -g automatic-rename-format '#{pane_current_command}'

# use mouse # More on mouse support http://floriancrouzat.net/2010/07/run-tmux-with-mouse-support-in-mac-os-x-terminal-app/
#setw -g mode-mouse on
#setw -g mouse-resize-pane on
#set -g mouse-select-window on
#set -g mouse-select-pane on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# vi movement keys
# set-option -g status-keys vi

############################################################################
# Status Bar
############################################################################
#set -g window-status-activity-attr bold
#set -g pane-active-border-fg yellow
#set -g status-fg colour248
#set -g status-bg colour233
#set -g message-fg colour239
#set -g message-bg colour233
#set -g mode-fg colour239
#set -g mode-bg colour233
#
set -g window-status-format "#[fg=colour246] #I #W #[default]"
set -g window-status-current-format "#[fg=colour254,noreverse,bg=colour000] #I #W "
#
#set-option -g status-right "#(cat /tmp/gtd)#[fg=colour239,noreverse,bg=black] #(date '+%a %m/%d %I:%M %P') "



#set-option -g status-justify right
#set-option -g status-bg black # colour213 # pink
#set-option -g status-fg white
#set-option -g status-interval 5
#set-option -g status-left-length 30
#set-option -g status-left '#[fg=white]#I #W #[default]'
#set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
#set-option -g visual-activity on

# status bar from  http://alexyu.se/content/2012/04/tmux-and-irssi-sitting-tree
#set -g base-index 1
set -g status-bg colour000 #white #colour229 #black originally
set -g status-fg white
set -g message-bg red
set -g message-fg white
set -g status-left '#[fg=colour246]#[bg=colour000] #S '
#set -g status-left '#[fg=colour239] #S.#I.#P '
#set -g status-left '#[fg=colour107]#[bg=black] #S.#I.#P #[default]'
#set -g status-right '#[fg=white]#(hostname)@#(host `hostname` | cut -d " " -f 4) | %F %R'
#set -g status-right "#(hostname)@#(host `hostname` | cut -d " " -f 4)|#(uptime) |#(uptime | awk -F'[a-z]:' '{ print $2})|%F %R"
#set -g status-right "#(hostname)|#(ip address) |#(uptime | awk -F: '{print $(NF\\)}' | sed s/' '//)|%F %R"
##LAST USED##set -g status-right "#[fg=colour239] $USER@#h | WAN:#(curl icanhazip.com) | LAN:#(ip addr | grep 'inet ' | grep global | awk '{print $2}') | #(uptime -p) | %F %R" #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
set -g status-right "#[fg=colour246]#[bg=colour000] WAN:#(curl icanhazip.com) | LAN:#(ip addr | grep 'inet ' | grep global | awk '{print $2}') | #(uptime -p) | %F %R" #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
set -g status-right-length 180

#Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'


############################################################################
# Unbindings
############################################################################
#unbind [ # copy mode bound to escape key
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split


############################################################################
# Bindings
############################################################################
# reload tmux conf
bind-key r source-file ~/.tmux.conf

#bind Escape copy-mode

# new split in current pane (horizontal / vertical)
bind-key - split-window -v # split pane horizontally
bind-key \ split-window -h # split pane vertically

# list panes
#bind-key Space list-panes

# break-pane
bind-key Enter break-pane

# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
#
#bind C-j command-prompt "joinp"
#bind C-j command-prompt "join-pane"
#bind-key j command-prompt "join-pane -s '%%'"
#bind-key j command-prompt "joinp -t:0"
bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

#previous pane
bind-key -n C-up prev
bind-key -n C-left prev

#next pane
bind-key -n C-right next
bind-key -n C-down next

############################################################################
# windows
############################################################################
#set-window-option -g window-status-current-bg red
#setw -g window-status-fg brightblue
#setw -g window-status-bg default
bind C-j previous-window
bind C-k next-window
bind-key C-a last-window # C-a C-a for last active window
bind A command-prompt "rename-window %%"
# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Resizing ---------------------------------------------------------------
bind-key C-o resize-pane -L 5
bind-key C-j resize-pane -D 5
bind-key C-k resize-pane -U 5
bind-key C-l resize-pane -R 5

# use vim motion keys while in copy mode
setw -g mode-keys vi

############################################################################
# layouts
############################################################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window


# focus on first window
# select-window -t 0


############################################################################
#Plugins
############################################################################
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'seebi/tmux-colors-solarized'
# set -g @resurrect-strategy-vim 'session'
# set -g @resurrect-capture-pane-contents 'on'
# set -g @resurrect-save-bash-history 'on'
# set -g @resurrect-processes 'vim man less top irssi ssh w3m mutt canto'
#set -g @colors-solarized '257'
# set -g @colors-solarized 'dark'
# #set -g @colors-solarized 'light'
# 
# run '~/.tmux/plugins/tpm/tpm'
